#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")
Import("env_modules")

env_mkv = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

thirdparty_dir = "#thirdparty/libsimplewebm/"
thirdparty_sources = [
    "libwebm/mkvparser/mkvparser.cc",
    "OpusVorbisDecoder.cpp",
    "WebMDemuxer.cpp",
]
thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

env_mkv.Prepend(CPPPATH=[thirdparty_dir, thirdparty_dir + "libwebm/"])

# also requires libogg, libvorbis and libopus
if env["builtin_libogg"]:
    env_mkv.Prepend(CPPPATH=["#thirdparty/libogg"])
if env["builtin_libvorbis"]:
    env_mkv.Prepend(CPPPATH=["#thirdparty/libvorbis"])
if env["builtin_opus"]:
    env_mkv.Prepend(CPPPATH=["#thirdparty/opus"])
    SConscript("opus/SCsub")

# Note: VP8/VP9 support removed - this module only handles MKV container parsing

env_thirdparty = env_mkv.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
env.modules_sources += thirdparty_obj

# Godot source files

module_obj = []

env_mkv.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
