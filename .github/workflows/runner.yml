name: üîó GHA
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-runner
  cancel-in-progress: true

jobs:
  # First stage: Only static checks, fast and prevent expensive builds from running.

  static-checks:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üìä Static checks
    uses: ./.github/workflows/static_checks.yml

  # Second stage: Run all the builds and some of the tests.

  android-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: ü§ñ Android
    needs: static-checks
    uses: ./.github/workflows/android_builds.yml

  ios-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üçè iOS
    needs: static-checks
    uses: ./.github/workflows/ios_builds.yml

  linux-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üêß Linux
    needs: static-checks
    uses: ./.github/workflows/linux_builds.yml

  macos-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üçé macOS
    needs: static-checks
    uses: ./.github/workflows/macos_builds.yml

  windows-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üèÅ Windows
    needs: static-checks
    uses: ./.github/workflows/windows_builds.yml

  web-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üåê Web
    needs: static-checks
    uses: ./.github/workflows/web_builds.yml

  # Third stage: Run auxiliary tests using build artifacts from previous jobs.

  # Can be turned off for PRs that intentionally break compat with godot-cpp,
  # until both the upstream PR and the matching godot-cpp changes are merged.
  godot-cpp-test:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: ü™≤ Godot CPP
    # This can be changed to depend on another platform, if we decide to use it for
    # godot-cpp instead. Make sure to move the .github/actions/godot-api-dump step
    # appropriately.
    needs: linux-build
    uses: ./.github/workflows/godot_cpp_test.yml

  completion:
    needs:
      [
        static-checks,
        android-build,
        ios-build,
        linux-build,
        macos-build,
        windows-build,
        web-build,
        godot-cpp-test,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout desync
        uses: actions/checkout@v2
        with:
          repository: V-Sekai/desync
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15.6"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go test
      - run: GOOS=windows GOARCH=amd64 go build -o ./archive/desync-windows-amd64.exe ./cmd/desync
      - run: GOOS=darwin GOARCH=amd64 go build -o ./archive/desync-macos-amd64 ./cmd/desync
      - run: GOOS=linux GOARCH=amd64 go build -o ./archive/desync-linux-amd64 ./cmd/desync
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Package Code
        run: |
          mkdir -p archive/store
          for artifact in $(ls artifacts); do
            ./archive/desync-linux-amd64 tar -i -s archive/store --chunk-size 4096:16384:65536 archive/$artifact.caidx artifacts/$artifact
          done
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: casync-archives
          path: archive
